package com.airline.controller;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.airline.bo.BookingCheck;
import com.airline.bo.UserBO;
import com.airline.model.Flight;
import com.airline.model.User;

/**
 * Servlet implementation class FlightDetailsController
 */
public class FlightDetailsController extends HttpServlet {

	private static final long serialVersionUID = 1L;

	/**
	 * 
	 * @see HttpServlet#HttpServlet()
	 * 
	 */

	public FlightDetailsController() {

		super();

		// TODO Auto-generated constructor stub

	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// TODO Auto-generated method stub
		HttpSession session = request.getSession(false);
		System.out.println(session.getId());
		RequestDispatcher dispatch = null;

		if ("signup".equals(request.getParameter("signup"))) {
			User user = new User();
			UserBO userBO = new UserBO();

			String emailId = request.getParameter("email");
			String password = request.getParameter("password");
			String contact = request.getParameter("contact");
			user.setEmailId(emailId);
			user.setPassword(password);
			user.setContact(contact);
			System.out.println("New Signup");
			boolean status = userBO.create(user);
			System.out.println(status);
		}

		else {

			String button = request.getParameter("button");
			Flight flight = new Flight();
			
			String airlineName = request.getParameter("airlinename");
			String source = request.getParameter("source");
			String arrivalTime = request.getParameter("arrivaltime");
			String businessPrice = request.getParameter("businessprice");
			String businessSeat = request.getParameter("businessseat");
			Date date = new SimpleDateFormat("yyyy-MM-dd").parse(request.getParameter("date"));
			String destination = request.getParameter("destination");
			String departureTime = request.getParameter("departuretime");
			String duration = request.getParameter("duration");
			String economyPrice = request.getParameter("economyprice");
			String economySeat = request.getParameter("economyseat");
			
			
			flight.setAirlineName(airlineName);
			flight.setSource(source);
			Date d = null;
			try {
				d = new SimpleDateFormat("HH:mm:ss").parse(arrivalTime);
			} catch (ParseException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			java.sql.Time sqlTime = new java.sql.Time(d.getTime());
			flight.setArrivalTime(sqlTime);
			flight.setBusinessPrice(Float.parseFloat(businessPrice));
			flight.setBusinessSeat(Integer.parseInt(businessSeat));
			try {
				flight.setDate(date);
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			flight.setDestination(destination);
			try {
				d = new SimpleDateFormat("HH:mm:ss").parse(departureTime);
			} catch (ParseException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			sqlTime = new java.sql.Time(d.getTime());
			flight.setDepartureTime(sqlTime);
			flight.setDuration(Float.parseFloat(duration));
			flight.setEconomyPrice(Float.parseFloat(economyPrice));
			flight.setEconomySeat(Integer.parseInt(economySeat));
			flight.setFlightId(request.getParameter("flightid"));
			session.setAttribute("selectedflight", flight);

			
			BookingCheck bcheck = new BookingCheck();
			User user = (User) session.getAttribute("user");
			if (user != null) {

				System.out.println(user.getContact() + "flightdetails");

				 if(button.equals("reserve")) {

		        	 
					 
		        	 boolean status= bcheck.validateBookingReserve(date);

		        	 System.out.println("to block ");

		        	 if(status) {

		        	 System.out.println("allowed");

		        	 }

		        	 else {

		        		 System.out.println("not allow");

		        	 }

		        	 

		         }

		         else if(button.equals("prebook")) {

		        	 System.out.println("to prebook");

		        	 boolean status=bcheck.validatePrebooking(date);

		        	 if(status) {

		            	 System.out.println("allowed+controller");

		 

		        	 }

		        	 else {

		            	 System.out.println(" not allowed+controller");



		        	 }

		         }

		         }

		  
			else if (user == null) {

				System.out.println("non user");

				dispatch = request.getRequestDispatcher("views/signup.jsp");
				dispatch.forward(request, response);

			}
		}

	}

}
