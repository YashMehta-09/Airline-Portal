/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.13
 * Generated at: 2019-01-25 09:46:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class visa_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<title>Visa Form</title>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\n");
      out.write("<!-- LINEARICONS -->\n");
      out.write("<link rel=\"stylesheet\" href=\"fonts1/linearicons/style.css\">\n");
      out.write("\n");
      out.write("<!-- MATERIAL DESIGN ICONIC FONT -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"fonts/material-design-iconic-font/css/material-design-iconic-font.min.css\">\n");
      out.write("\n");
      out.write("<!-- DATE-PICKER -->\n");
      out.write("<link rel=\"stylesheet\" href=\"vendor/date-picker/css/datepicker.min.css\">\n");
      out.write("\n");
      out.write("<!-- STYLE CSS -->\n");
      out.write("<link rel=\"stylesheet\" href=\"css5/style.css\">\n");
      out.write("<style>\n");
      out.write(".checkbox {\n");
      out.write("\tpadding-left: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".checkbox-success input[type=\"checkbox\"]:checked+label::before {\n");
      out.write("\tbackground-color: #5cb85c;\n");
      out.write("\tborder-color: #5cb85c;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".checkbox-success input[type=\"checkbox\"]:checked+label::after {\n");
      out.write("\tcolor: #fff;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("function validate(){\n");
      out.write("\t\n");
      out.write("\tvar countryname=document.getElementById(\"countryname\");\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<div class=\"wrapper\">\n");
      out.write("\t\t<div class=\"inner\">\n");
      out.write("\t\t\t<form action=\"TicketGenerateController\" method=\"post\">\n");
      out.write("\t\t\t\t<h3>Enter your visa information</h3>\n");
      out.write("\t\t\t\t<div class=\"form-row\">\n");
      out.write("\t\t\t\t\t<div class=\"form-wrapper\">\n");
      out.write("\t\t\t\t\t\t<label for=\"\"> country that issued visa *</label> <input\n");
      out.write("\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" name=\"countryname\"  id=\"countryname\" placeholder=\"Country\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"form-wrapper\">\n");
      out.write("\t\t\t\t\t\t<label for=\"\">Visa identity number(unique) *</label> <input\n");
      out.write("\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" name=\"visaid\"placeholder=\"Visa Id\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"form-row\">\n");
      out.write("\t\t\t\t\t<div class=\"form-wrapper\">\n");
      out.write("\t\t\t\t\t\t<label for=\"\"> Date of the visa issue *</label> <span\n");
      out.write("\t\t\t\t\t\t\tclass=\"lnr lnr-calendar-full\"></span> <input type=\"date\"\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control datepicker-here\" name=\"issuedate\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"form-wrapper\">\n");
      out.write("\t\t\t\t\t\t<label for=\"\">Date of the visa expiry*</label> <span\n");
      out.write("\t\t\t\t\t\t\tclass=\"lnr lnr-calendar-full\"></span> <input type=\"date\"\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control datepicker-here\" name=\"expirydate\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t<div class=\"form-check\">\n");
      out.write("\t\t\t\t\t\t<input class=\"form-check-input\" type=\"checkbox\" value=\"\"\n");
      out.write("\t\t\t\t\t\t\tid=\"invalidCheck2\" required> <label\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-check-label\" for=\"invalidCheck2\"> <a href=\"\">Agree\n");
      out.write("\t\t\t\t\t\t\t\tto terms and conditions</a> <br> <span>read terms and\n");
      out.write("\t\t\t\t\t\t\t\tconditions</span>\n");
      out.write("\t\t\t\t\t\t</label>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t<button class=\"submit-btn\" name=\"visa\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvalue=\"visa\">Pay Now</button>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<script src=\"js1/jquery-3.3.1.min.js\"></script>\n");
      out.write("\n");
      out.write("\t<!-- DATE-PICKER -->\n");
      out.write("\t<script src=\"vendor/date-picker/js/datepicker.js\"></script>\n");
      out.write("\t<script src=\"vendor/date-picker/js/datepicker.en.js\"></script>\n");
      out.write("\n");
      out.write("\t<script src=\"js1/main.js\"></script>\n");
      out.write("</body>\n");
      out.write("<!-- This templates was made by Colorlib (https://colorlib.com) -->\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
